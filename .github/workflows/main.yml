name: Build/release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  release:
    runs-on: ${{ matrix.os }}

    # Platforms to build on/for
    strategy:
      matrix:
        os: [windows-latest,  ubuntu-latest] #macos-latest, ubuntu-latest, 
        # node-version: [18.x]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js #${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: 18.x #${{ matrix.node-version }}
          cache: 'npm'

      # - name: Install Snapcraft
      #   uses: samuelmeuli/action-snapcraft@v1
      #   # Only install Snapcraft on Ubuntu
      #   if: startsWith(matrix.os, 'ubuntu')
      #   with:
      #     # Log in to Snap Store
      #     snapcraft_token: ${{ secrets.snapcraft_token }}

      # - name: Prepare for app notarization (macOS)
      #   if: startsWith(matrix.os, 'macos')
      #   # Import Apple API key for app notarization on macOS
      #   run: |
      #     mkdir -p ~/private_keys/
      #     echo '${{ secrets.api_key }}' > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8
      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          build_script_name: 'build:github'
          github_token: ${{ secrets.GITHUB_TOKEN }}

          # # macOS code signing certificate
          # mac_certs: ${{ secrets.mac_certs }}
          # mac_certs_password: ${{ secrets.mac_certs_password }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          # release: ${{ secrets.force_release == 'true' || startsWith(github.ref, 'refs/tags/v') }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
        # env:
        #   # macOS notarization API key
        #   API_KEY_ID: ${{ secrets.api_key_id }}
        #   API_KEY_ISSUER_ID: ${{ secrets.api_key_issuer_id }}
