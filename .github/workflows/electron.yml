# name of your github action
name: ElectronCI
# this will help you specify where to run 
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# this is where the magic happens, each job happens in parallel btw
jobs:
  build_on_win:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: see directory
        run: ls

      - name: Install dependencies
        run: npm ci
          
      - name: Build Electron
        run: npm run build

      - name: see directory
        run: ls ./dist

      # - uses: lucyio/upload-to-release@master
      #   with:
      #     name: lucyio/electron
      #     path: ./dist
      #     action: unpublished
      #     release_id: ${{ startsWith(github.ref, 'refs/tags/v') }}
      #     release-repo: lucyio/electron

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name:  ${{ startsWith(github.ref, 'refs/tags/v') }}
          release_name: Release ${{ startsWith(github.ref, 'refs/tags/v') }}
          draft: true
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/TJsonNotes-Setup-v1.1.0_win_x64.zip
          asset_name: TJsonNotes-Setup-v1.1.0_win_x64.zip
          asset_content_type: application/zip